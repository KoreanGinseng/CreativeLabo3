#pragma once
#include "MySocket.h"

// ********************************************************************************
/// <summary>
/// 
/// </summary>
// ********************************************************************************
class CClient
{
protected:

    CMySocket   m_Socket;         //! ソケット君

    std::string m_IP;             //! 接続先IPアドレス

    HANDLE      m_hRecieveThread; //! 受信スレッド

    HANDLE      m_hConnectThread; //! 接続スレッド

public:

	// ********************************************************************************
	/// <summary>
	/// コンストラクタ
	/// </summary>
	/// <param name="ip">接続先IPアドレス</param>
	/// <param name="portNo">接続先ポート番号</param>
	/// <created>いのうえ,2021/02/16</created>
	/// <changed>いのうえ,2021/02/16</changed>
	// ********************************************************************************
    CClient(const char* ip = "", int portNo = 18900);

	// ********************************************************************************
	/// <summary>
	/// デストラクタ
	/// </summary>
	/// <created>いのうえ,2021/02/16</created>
	/// <changed>いのうえ,2021/02/16</changed>
	// ********************************************************************************
    virtual ~CClient(void);

    // ********************************************************************************
    /// <summary>
    /// 開始
    /// </summary>
    /// <param name="ip">接続先IPアドレス</param>
    /// <created>いのうえ,2021/02/16</created>
    /// <changed>いのうえ,2021/02/16</changed>
    // ********************************************************************************
    void Start(const char* ip, Protocol prot);

    // ********************************************************************************
    /// <summary>
    /// 開始
    /// </summary>
    /// <created>いのうえ,2021/02/16</created>
    /// <changed>いのうえ,2021/02/16</changed>
    // ********************************************************************************
    void Start(Protocol prot);

	// ********************************************************************************
	/// <summary>
	/// 接続スレッド
	/// </summary>
	/// <param name="pData">this</param>
	/// <returns>0 : 正常終了, それ以外 : 異常終了</returns>
	/// <created>いのうえ,2021/03/02</created>
	/// <changed>いのうえ,2021/03/02</changed>
	// ********************************************************************************
	static unsigned int WINAPI ConnectThread(void* pData);

    // ********************************************************************************
    /// <summary>
    /// 受信スレッド
    /// </summary>
    /// <param name="pData">this</param>
    /// <returns>0 : 正常終了, それ以外 : 異常終了</returns>
    /// <created>いのうえ,2021/02/17</created>
    /// <changed>いのうえ,2021/02/17</changed>
    // ********************************************************************************
    static unsigned int WINAPI RecieveThread(void* pData);

    // ********************************************************************************
    /// <summary>
    /// データの送信
    /// </summary>
    /// <param name="pData">送信データポインタ</param>
    /// <param name="datalen">送信データのサイズ</param>
    /// <created>いのうえ,2021/02/17</created>
    /// <changed>いのうえ,2021/02/17</changed>
    // ********************************************************************************
    virtual int Send(const void* pData, int datalen);

    // ********************************************************************************
    /// <summary>
    /// 受信データを好きにする関数
    /// </summary>
    /// <param name="data">受信データ</param>
    /// <param name="size">受信データサイズ</param>
    /// <created>いのうえ,2021/02/16</created>
    /// <changed>いのうえ,2021/02/16</changed>
    // ********************************************************************************
    virtual void Recieve(const DataHeader& header, const void* data, int size) {}
};

